<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:init.properties</value>
		</property>
	</bean>
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${datasource.driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${datasource.url}</value>
		</property>
		<property name="username">
			<value>${datasource.username}</value>
		</property>
		<property name="password">
			<value>${datasource.password}</value>
		</property>

		<property name="idleConnectionTestPeriod">
			<value>${boneCP.idleConnectionTestPeriod}</value>
		</property>

		<property name="idleMaxAge">
			<value>${boneCP.idleMaxAge}</value>
		</property>
		<property name="maxConnectionsPerPartition">
			<value>${boneCP.maxConnectionsPerPartition}</value>
		</property>
		<property name="minConnectionsPerPartition">
			<value>${boneCP.minConnectionsPerPartition}</value>
		</property>
		<property name="partitionCount">
			<value>${boneCP.partitionCount}</value>
		</property>
		<property name="acquireIncrement">
			<value>${boneCP.acquireIncrement}</value>
		</property>
		<property name="statementsCacheSize">
			<value>${boneCP.statementsCacheSize}</value>
		</property>
		<property name="statementsCachedPerConnection">
			<value>${boneCP.statementsCachedPerConnection}</value>
		</property>
		<property name="releaseHelperThreads">
			<value>${boneCP.releaseHelperThreads}</value>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- datasource 配置jdbcTemplate -->
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>

	
	<!-- myBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- DAO层由 MapperScannerConfigurer自动生成mapper bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shop.mapper" />
	</bean>
	<!-- Service层 -->
	<context:component-scan base-package="com.shop.service.impl"/>
	
	<!-- 事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="load*" read-only="true"/>
			<tx:method name="*" rollback-for="com.shop.exception.ApplyException"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor pointcut="execution(* com.shop.service.*Service.*(..))" advice-ref="txAdvice"/>
	</aop:config>
	
</beans>
